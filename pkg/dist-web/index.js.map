{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["import 'construct-style-sheets-polyfill';\n/**\n * Converts a snake-case string to camelCase\n *\n * @param {string} str kebab-cased string\n * @returns {string} camelCased string\n */\n\nfunction kebabToCamelCase(str) {\n  return str.replace(/(-)([a-z])/g, g => g[1].toUpperCase());\n}\n/**\n * Converts a camelCase string to kebab-case\n *\n * @param {string} str camelCased string\n * @returns {string} kebab-cased string\n */\n\n\nfunction camelToKebabCase(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n/**\n * Takes attributes from element and creates an object\n * with the keys camelCased.\n *\n * @param {NamedNodeMap} attributes Element.attributes\n * @returns {object} Object with camelCased keys\n */\n\n\nfunction attributesToObject(attributes) {\n  return attributes ? Array.from(attributes).reduce((cur, {\n    localName,\n    value\n  }) => ({ ...cur,\n    [kebabToCamelCase(localName)]: value\n  }), {}) : {};\n}\n/**\n * Converts a string of HTML into nodes.\n *\n * @param {string} string HTML in string form\n * @returns {Node[]} Nodes parsed from the HTML string\n */\n\n\nexport function stringToElements(string) {\n  const fragment = document.createRange().createContextualFragment(string);\n  return [...fragment.children];\n}\n/**\n * Takes a class for an extended Component/HTMLElement\n * and registes it basedof the ClassName as class-name.\n *\n * @param {Function} classInstace Instance of a custom element to register\n * @returns {string} the kebab-case version fo ClassName\n */\n\nexport function registerComponent(classInstace) {\n  // @ts-ignore\n  const componentName = 'is' in classInstace ? classInstace.is : classInstace.prototype.constructor.name;\n  const kebabName = camelToKebabCase(componentName);\n  customElements.define(kebabName, classInstace);\n  return kebabName;\n}\nconst ComponentCache = {};\nconst CSSCache = {};\nexport class Component extends HTMLElement {\n  constructor(componentPath) {\n    super();\n\n    if (componentPath) {\n      this.componentPath = componentPath;\n    } else {\n      console.warn('You did not send a path to the super method in your constructor. Thus CSS and HTML cannot be read for this component.', this);\n      console.warn('If shipping for modern browser, then call super with import.meta.url. If not, specify a path that is similar to import.meta.url yourself.');\n      console.warn('Should be the path to the component you are making.');\n    }\n  }\n\n  $(q) {\n    return this._sDOM.querySelector(q);\n  }\n\n  set state(updates) {\n    this._state = Object.freeze({ ...(this._state || {}),\n      ...updates\n    }); // @ts-ignore\n\n    if (this.render) {\n      this._render();\n    }\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get cssPath() {\n    return this.componentPath && this.componentPath.replace(/\\.js/gi, '.css');\n  }\n\n  get htmlPath() {\n    return this.componentPath.replace(/\\.js/gi, '.html');\n  }\n\n  get props() {\n    return attributesToObject(this.attributes);\n  }\n  /**\n   * Fetch sibling CSS if componentPath was sent in the super call.\n   * Execute the render method of the component and return the result as a node\n   *\n   * @returns {Promise<Node>}\n   */\n\n\n  async _render() {\n    const docFrag = new DocumentFragment();\n    const cssText = CSSCache[this.cssPath];\n\n    if (!cssText && this.cssPath) {\n      const sheet = await this.fetchCSSAsStyleSheet(); // @ts-ignore\n\n      this._sDOM.adoptedStyleSheets = [sheet];\n    } // @ts-ignore\n\n\n    const htmlText = this.render(this.props);\n    stringToElements(htmlText).forEach(c => docFrag.appendChild(c));\n    return docFrag.cloneNode(true);\n  }\n\n  async fetchHTMLAsDocFrag() {\n    const docFrag = new DocumentFragment();\n    const response = await fetch(this.htmlPath);\n\n    if (response.ok) {\n      const text = await response.text();\n      stringToElements(text).forEach(c => docFrag.appendChild(c));\n    }\n\n    return docFrag;\n  }\n\n  async fetchCSSAsStyleSheet() {\n    const sheet = new CSSStyleSheet();\n    const response = await fetch(this.cssPath);\n\n    if (response.ok && response.headers.get('content-type').indexOf('text/css') !== -1) {\n      const text = await response.text(); // @ts-ignore\n\n      await sheet.replace(text);\n    }\n\n    return sheet;\n  }\n  /**\n   * Fetch sibling CSS and HTML if componentPath was sent in the super call.\n   * If these has already been fetched (a component is initied more than one)\n   * then re-use the cached document fragment instead of fethcing again.\n   *\n   * @returns {Promise<Node>}\n   */\n\n\n  async _renderHTMLFile() {\n    const componentId = btoa(this.componentPath);\n\n    if (!ComponentCache[componentId]) {\n      ComponentCache[componentId] = Promise.all([this.fetchHTMLAsDocFrag(), this.fetchCSSAsStyleSheet()]);\n    }\n\n    const [docFrag, sheet] = await ComponentCache[componentId]; // @ts-ignore\n\n    this._sDOM.adoptedStyleSheets = [sheet];\n    return docFrag.cloneNode(true);\n  } // Kinda like Reacts componentDidUpdate\n\n\n  componentDidUpdate() {} // Kinda like Reacts componentDidMount\n\n\n  componentDidMount() {}\n\n  async attributeChangedCallback() {\n    let content; // @ts-ignore\n\n    if (this.render) {\n      content = await this._render();\n    } else {\n      content = await this._renderHTMLFile();\n    }\n\n    this._sDOM.innerHTML = null;\n\n    this._sDOM.appendChild(content);\n\n    if (this.componentDidUpdate) {\n      this.componentDidUpdate();\n    }\n  }\n\n  async connectedCallback() {\n    this._sDOM = this.attachShadow({\n      mode: 'closed'\n    });\n    let content; // @ts-ignore\n\n    if (this.render) {\n      content = await this._render();\n    } else {\n      content = await this._renderHTMLFile();\n    }\n\n    this._sDOM.innerHTML = null;\n\n    this._sDOM.appendChild(content);\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (this.componentDidMount) {\n          this.componentDidMount();\n        }\n      });\n    });\n  }\n\n}"],"names":[],"mappings":"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"}